install.packages("swirl")
install.packages("swirl")
packageVersion("swirl")
library(swirl)
swirl()
swirl()
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Statistical Inference")
install_from_swirl("Regression Models")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages(grdevices)
install.packages(grDevices)
install.packages("grDevices")
install.packages("grDevices")
install.packages("kernlab")
library(swirl)
swirl()
library(swirl)
M7md
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
library()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install.packages(reshape2)
install.packages("reshape2")
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
data()
library(swirl)
swirl()
rm()
rm(all)
all()
ls()
x<- ls()
rm(x)
rm(ls())
getwd
q()
library(swirl)
swirl()
install.packages("shiny")
?builder
library(shiny)
?builder
install.packages("miniUI")
install.packages("googleVis")
install.packages("plotly")
install.packages("leaflet")
library(leaflet)
?leaflet
m = m %>% clearBounds()
m = leaflet() %>% addTiles()
df <- data.frame(lat = runif(500, min = 39.25, max = 39.35),
lng = runif(500, min = -76.65, max = -76.55))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(clusterOptions = markerClusterOptions())
df <- data.frame(lat = runif(500, min = 139.25, max = 139.35),
lng = runif(500, min = -176.65, max = -176.55))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(clusterOptions = markerClusterOptions())
df <- data.frame(lat = runif(500, min = 139.25, max = 139.35),
lng = runif(500, min = -76.65, max = -76.55))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(clusterOptions = markerClusterOptions())
df <- data.frame(lat = runif(500, min = 39.25, max = 39.35),
lng = runif(500, min = -76.65, max = -76.55))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(clusterOptions = markerClusterOptions())
df <- data.frame(
lat = c(30.06263),
lng = c(31.24967))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(clusterOptions = markerClusterOptions())
df <- data.frame(
lat = c(30.06263),
lng = c(31.24967))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers(clusterOptions = markerClusterOptions())
df <- data.frame(
lat = c(30.06263),
lng = c(31.24967))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
df <- data.frame(
lat = c(30.06263),
lng = c(31.24967))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
df <- data.frame(
lat = c(30.06263),
lng = c(31.24967))
df = leaflet(df)
addTiles(df = leaflet(df))
df <- data.frame(
lat = c(30.06263),
lng = c(31.24967))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
df <- data.frame(
lat = c(31.21564),
lng = c(29.95527))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
df <- data.frame(
lat = c(30.06263),
lng = c(31.24967))
df %>% leaflet() %>% addTiles() %>% addMarkers()
df <- data.frame(
lat = c(30.06263),
lng = c(31.24967))
df %>%
leaflet() %>%
addTiles() %>%
addMarkers()
library(leaflet)
library(plotly)
names(mtcars)
library(plotly)
plot_ly(mtcars, x = hp, y = mpg, mode = "markers",
color = as.factor(cyl), size = hp)
library(plotly)
plot_ly(mtcars, x = hp, y = mpg, mode = "markers",
color = as.factor(cyl), size = hp)
library(plotly)
plot_ly(mtcars, x = disp, y = mpg, mode = "markers",
color = as.factor(cyl), size = hp)
library(plotly)
plot_ly(mtcars, x = disp, y = mpg, mode = "markers",
color = as.factor(cyl), size = hp)
data()
names(Nile)
Nile
diamonds
library(plotly)
plot_ly(diamonds, x = price, y = cut, mode = "markers",
color = as.factor(color), size = hp)
library(plotly)
data("diamonds")
plot_ly(diamonds, x = price, y = cut, mode = "markers",
color = as.factor(color), size = hp)
library(plotly)
data("diamonds")
plot_ly(diamonds, x = diamonds$price, y = cut, mode = "markers",
color = as.factor(color), size = hp)
library(plotly)
data("diamonds")
plot_ly(diamonds, x = diamonds$price, y = cut, mode = "markers",
color = as.factor(diamonds$color), size = hp)
data("diamonds")
library(plotly)
data("diamonds")
plot_ly(diamonds, x = diamonds$price, y = cut, mode = "markers",
color = as.factor(diamonds$color), size = diamonds$clarity)
library(plotly)
data("diamonds")
plot_ly(diamonds, x = diamonds$price, y = cut, mode = "markers",
color = as.factor(diamonds$color))
library(plotly)
data("diamonds")
plot_ly(diamonds, x = diamonds$price, y = diamonds$cut, mode = "markers",
color = as.factor(diamonds$color))
library(plotly)
data("diamonds")
plot_ly(diamonds, x = diamonds$price, y = diamonds$cut, mode = "markers",
color = as.factor(diamonds$color))
library(plotly)
library(tidyr)
library(dplyr)
data("EuStockMarkets")
stocks <- as.data.frame(EuStockMarkets) %>%
gather(index, price) %>%
mutate(time = rep(time(EuStockMarkets), 4))
a <- plot_ly(stocks, x = time, y = stocks$price, color = stocks$index)
a
library(plotly)
library(tidyr)
library(dplyr)
data("EuStockMarkets")
stocks <- as.data.frame(EuStockMarkets) %>%
gather(index, price) %>%
mutate(time = rep(time(EuStockMarkets), 4))
plot_ly(stocks, x = time, y = stocks$price, color = stocks$index)
library(igraph)
install.packages("igraph")
library(igraph)
library(igraph)
installed.packages()
install.packages("igraph")
install.packages("igraph")
library(igraph)
install.packages("igraph")
library(igraph)
library(igraph)
library("igraph")
library(igraph)
?make_ring
??make_ring
library(igraph)
str(installed.packages)
str(installed.packages())
installed.packages()[igraph]
library(igraph)
shiny::runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Interactive_Graph_App')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Interactive_Graph_App')
install.packages("igraph")
install.packages("igraph")
library(igraph)
library(igraph)
install.packages("igraph")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("igraph")
library(igraph)
?make_ring
shiny::runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
library(igraph); library(dplyr);
plot(make_full_graph(10) %>% set_edge_attr("color", value = "blue")%>%set_edge_attr("width", value =5)%>%set_vertex_attr("color", value = "green")%>%set_vertex_attr("size", value = 10))
library(igraph); library(dplyr);
plot(make_full_graph(8) %>% set_edge_attr("color", value = "blue")%>%set_edge_attr("width", value =5)%>%set_vertex_attr("color", value = "green")%>%set_vertex_attr("size", value = 10))
library(igraph); library(dplyr);
plot(make_full_graph(7) %>% set_edge_attr("color", value = "blue")%>%set_edge_attr("width", value =5)%>%set_vertex_attr("color", value = "green")%>%set_vertex_attr("size", value = 10))
library(igraph); library(dplyr);
plot(make_full_graph(8) %>% set_edge_attr("color", value = "blue")%>%set_edge_attr("width", value =5)%>%set_vertex_attr("color", value = "green")%>%set_vertex_attr("size", value = 10))
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project')
runApp('E:/M7md/Coursera/Projects/Data Products/Asmaa/Final Project/Data_Product_Final_Prezi')
runApp('E:/M7md/Coursera/Projects/Data Products/Asmaa/Final Project/Data_Product_Final_Prezi')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='mohamedelkhodary', token='90E6865499C4811D460FF6FBF41E4DED', secret='d4vwfWUAMUobq3P6ymYFUA01hG8MUhlrah5UbnDN')
library(rsconnect)
deployApp()
shiny::runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project/Shiny App')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project/Shiny App')
install.packages("NMF")
install.packages("doParallel")
install.packages("NMF")
install.packages("NMF")
install.packages("NMF")
shiny::runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project/Shiny App')
rsconnect::setAccountInfo(name='mohamedelkhodary', token='90E6865499C4811D460FF6FBF41E4DED', secret='d4vwfWUAMUobq3P6ymYFUA01hG8MUhlrah5UbnDN')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project/Shiny App')
library(rsconnect)
rsconnect::setAccountInfo(name='mohamedelkhodary', token='90E6865499C4811D460FF6FBF41E4DED', secret='d4vwfWUAMUobq3P6ymYFUA01hG8MUhlrah5UbnDN')
runApp('E:/M7md/Coursera/Projects/Data Products/Elkhodary/Final Project/Shiny App')
runApp('E:/M7md/Coursera/Projects/Data Products/Asmaa/Final Project/Shiny App')
knitr::opts_chunk$set(echo = TRUE)
setwd("E:/M7md/Coursera/Projects/Reproducible Research/Project 1/RepData_PeerAssessment1")
ls()
setwd("E:/M7md/Coursera/Projects/Reproducible Research/Project 1/RepData_Project1")
ls()
setwd("E:/M7md/Coursera/Projects/Reproducible Research/Project 1/RepData_PeerAssessment1")
ls()
v <- read.csv("activity.csv")
View(v)
rm(v)
activitydf <- read.csv("activity.csv")
p1 <- ggplot(stepsbyday, aes(totalsteps)) +
geom_histogram(color="black", fill="white") +
scale_x_continuous(name = "Total number of steps") +
scale_y_continuous(name = "Count") +
ggtitle("Total number of steps taken each day")
library(knitr)
knit2html("PA1_template.Rmd")
library(rmarkdown)
render("PA1_template.Rmd")
